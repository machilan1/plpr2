x-database-variables: &database-variables
  DB_HOST: db:5432
  DB_NAME: ${DB_NAME:-db}
  DB_USER: ${DB_USER:-postgres}
  DB_PASSWORD: ${DB_PASSWORD:-postgres}

x-storage-environment: &storage-env
  # Used by the gcs client sdk. We can't use bridge network because the sdk only supports http/https scheme
  STORAGE_EMULATOR_HOST: http://host.docker.internal:44443

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME:-db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  storage:
    # See https://github.com/fsouza/fake-gcs-server
    image: fsouza/fake-gcs-server
    # Run `docker run --rm fsouza/fake-gcs-server -help` to see the available options
    entrypoint: >
      /bin/sh -c
      "/bin/fake-gcs-server -data /data -scheme http -public-host 0.0.0.0:44443 -port 44443 -backend memory -cors-headers x-goog-acl"
    ports:
      # Sync the port with the command above so that the object path generated by the fake-gcs-server
      # will be the same as the one used by the frontend
      - "44443:44443"
    volumes:
      - ./storage:/data
    stop_grace_period: 2s # Kill the container faster since it takes a while to stop

  smtp:
    image: rnwood/smtp4dev
    # See https://github.com/rnwood/smtp4dev/blob/master/Rnwood.Smtp4dev/appsettings.json
    environment:
      # Specifies the URLs the web UI will use inside the container.
      - ServerOptions__Urls=http://*:80
      # Sets the port number for the SMTP server used to relay messages.
      - RelayOptions__SmtpPort=25
      # Specifies the port the IMAP server will listen on - allows standard email clients to view/retrieve messages
      - ServerOptions__ImapPort=143
    ports:
      - "${SMTP_PORT:-45000}:80"
    entrypoint: >
      /bin/sh -c
      "apt-get update && apt-get -y install curl && dotnet /app/Rnwood.Smtp4dev.dll"
    stop_grace_period: 2s # Kill the container faster since it takes a while to stop

  migrate:
    build:
      context: ..
      dockerfile: ./build/migrate.dockerfile
    environment:
      <<: [ *database-variables ]
    depends_on:
      db:
        condition: service_healthy

  seed:
    build:
      context: ..
      dockerfile: ./build/seed.dockerfile
    environment:
      <<: [ *database-variables ]
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  api:
    build:
      context: ..
      dockerfile: ./build/api.dockerfile
    environment:
      <<: [ *database-variables, *storage-env ]
      SESSION_SECURE: "false"
    ports:
      - "3000:3000"
      - "3010:3010"
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      seed:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD-SHELL", "curl -LI http://localhost:3000/v1/healthz -o /dev/null -w '%{http_code}\n' -s | grep '200'" ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata: